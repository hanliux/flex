<?php
/**
 * Created by PhpStorm.
 * User: wodrow
 * Date: 17-5-8
 * Time: 下午6:26
 */

namespace common\models;


use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\helpers\Url;

/**
 * Class Story
 * @package common\models
 *
 * @property User $user
 * @property User $updateUser
 * @property User $createdBy
 * @property User $updatedBy
 * @property array $tagArr
 * @property StoryReply[] $storyReplies
 */
class Story extends \common\models\tables\Story
{
    const STATUS_ACTIVE = 10;

    public static function getStatus()
    {
        return [
            self::STATUS_ACTIVE => '正常',
        ];
    }

    const TYPE_DEFAULT = 10;

    public static function getType()
    {
        return [
            self::TYPE_DEFAULT => '默认',
        ];
    }

    public $tagArr;

    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'updatedByAttribute' => false,
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => '编号',
            'title' => '标题',
            'desc' => '简介',
            'content' => '内容',
            'created_at' => '发布时间',
            'created_by' => '发布人',
            'updated_at' => '修改时间',
            'updated_by' => '修改人',
            'tagArr' => '标签',
            'status' => '状态',
            'type' => '类型',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdateUser()
    {
        return $this->hasOne(User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStoryReplies()
    {
        return $this->hasMany(StoryReply::className(), ['story_id' => 'id']);
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->tagArr = $this->getTagArr();
    }

    public function afterSave($insert, $changedAttributes)
    {
        $user_info = UserInfo::findOne(['user_id'=>\Yii::$app->user->id]);
        if ($insert){
            $user_info->editInfoLevel(UserLevelRule::$update_rules['story_publish_rule']);
        }
    }

    public function getTagArr()
    {
        $arr = [];
        $tags = $this->tags;
        foreach($tags as $k => $v){
            $arr[] = $v->name;
        }
        return $arr;
    }

    public function getUrlArr()
    {
        $arr = ["/story/default/view", 'id'=>$this->id];
        return $arr;
    }

    public function getUrl()
    {
        $url = Url::to($this->getUrlArr());
        return $url;
    }

    public function getUpdateUrlArr()
    {
        $arr = ["/user/story/update", 'id'=>$this->id];
        return $arr;
    }

    public function getUpdateUrl()
    {
        $url = Url::to($this->getUpdateUrlArr());
        return $url;
    }
}